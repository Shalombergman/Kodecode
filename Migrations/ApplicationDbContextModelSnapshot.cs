// <auto-generated />
using System;
using MVCBooksSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCBooksSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCBooksSystem.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("SetId")
                        .HasColumnType("int");

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("BookID");

                    b.HasIndex("GenreId");

                    b.HasIndex("SetId");

                    b.HasIndex("ShelvId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.BookSet", b =>
                {
                    b.Property<int>("SetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SetID"));

                    b.Property<string>("SetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SetID");

                    b.ToTable("BookSets");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Library", b =>
                {
                    b.Property<int>("LibraryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibraryID"));

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("LibraryID");

                    b.HasIndex("GenreId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Shelv", b =>
                {
                    b.Property<int>("ShelvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelvId"));

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("LibraryId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("ShelvId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Shelves");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Book", b =>
                {
                    b.HasOne("MVCBooksSystem.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MVCBooksSystem.Models.BookSet", "BookSet")
                        .WithMany("Books")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MVCBooksSystem.Models.Shelv", "Shelv")
                        .WithMany("Books")
                        .HasForeignKey("ShelvId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("BookSet");

                    b.Navigation("Genre");

                    b.Navigation("Shelv");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Library", b =>
                {
                    b.HasOne("MVCBooksSystem.Models.Genre", "Genre")
                        .WithMany("Libraries")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Shelv", b =>
                {
                    b.HasOne("MVCBooksSystem.Models.Library", "Library")
                        .WithMany("Shelves")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Library");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.BookSet", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Genre", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Libraries");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Library", b =>
                {
                    b.Navigation("Shelves");
                });

            modelBuilder.Entity("MVCBooksSystem.Models.Shelv", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
